const typescript = require('@rollup/plugin-typescript');
const dts = require('rollup-plugin-dts').default;
const { string } = require('rollup-plugin-string');

const packageJson = require('./package.json');

module.exports = [
  {
    input: 'src/index.ts',
    output: [
      {
        file: packageJson.main,
        format: 'cjs',
        sourcemap: true,
      },
      {
        file: packageJson.module,
        format: 'esm',
        sourcemap: true,
      },
      {
        file: packageJson.browser,
        format: 'umd',
        name: 'domainExtract', // This is the global variable name in browser
        sourcemap: true,
      },
    ],
    plugins: [
      string({
        include: '**/*.dat',
      }),
      typescript({ tsconfig: './tsconfig.json' }),
    ],
  },
  {
    // This entry point is for bundling the type declarations.
    // It should point to the main declaration file generated by the first build step.
    input: 'dist/esm/index.d.ts',
    output: [{ file: 'dist/types/index.d.ts', format: 'esm' }],
    plugins: [dts()],
    // This is important to prevent Rollup from trying to bundle the tld.dat file again.
    external: ['./core/tld.dat']
  },
];
